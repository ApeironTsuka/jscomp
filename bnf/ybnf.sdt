{"productions":[{"left":{"type":1,"label":"axiom-real"},"virt":true,"index":0},{"left":{"type":1,"label":"definition-plus"},"virt":true,"index":1},{"left":{"type":1,"label":"definition-plus"},"virt":true,"index":2},{"left":{"type":1,"label":"root"},"func":"(left, right) => { let out = {}; for (let i = 0, l = right.length; i < l; i++) { out[right[i].value[0]] = right[i].value[1]; } left.value = { definitions: out, tags: {} }; }","index":3},{"left":{"type":1,"label":"definition"},"func":"(left, right) => { left.value = [ right[0].value, right[2].value ]; }","index":4},{"left":{"type":1,"label":"productionB-plus"},"virt":true,"index":5},{"left":{"type":1,"label":"productionB-plus"},"virt":true,"index":6},{"left":{"type":1,"label":"productions"},"func":"(left, right) => { let out = []; for (let i = 0, l = right.length; i < l; i++) { out.push(right[i].value); } left.value = out; }","index":7},{"left":{"type":1,"label":"productions"},"func":"(left, right) => { let out = []; for (let i = 0, l = right.length; i < l; i++) { out.push(right[i].value); } left.value = out; }","index":8},{"left":{"type":1,"label":"token-plus"},"virt":true,"index":9},{"left":{"type":1,"label":"token-plus"},"virt":true,"index":10},{"left":{"type":1,"label":"productionA"},"func":"(left, right) => { left.value = mkprod(0, left, right); }","index":11},{"left":{"type":1,"label":"productionB"},"func":"(left, right) => { left.value = mkprod(1, left, right); }","index":12},{"left":{"type":1,"label":"token"},"func":"(left, right) => { left.value = { type: right[0].orig._type, label: right[0].value }; }","index":13},{"left":{"type":1,"label":"token"},"func":"(left, right) => { left.value = { type: right[0].orig._type, label: right[0].value }; }","index":14}],"charts":[{"root":{"act":2,"n":1},"definition-plus":{"act":2,"n":2},"definition":{"act":2,"n":3},"[nonterm]":{"act":0,"n":4}},{"$":{"act":3,"n":0,"l":1,"virt":true}},{"$":{"act":1,"n":3,"l":1},"definition":{"act":2,"n":5},"[nonterm]":{"act":0,"n":4}},{"$":{"act":1,"n":2,"l":1,"virt":true},"[nonterm]":{"act":1,"n":2,"l":1,"virt":true}},{":":{"act":0,"n":6}},{"$":{"act":1,"n":1,"l":2,"virt":true},"[nonterm]":{"act":1,"n":1,"l":2,"virt":true}},{"productions":{"act":2,"n":7},"productionA":{"act":2,"n":8},"token-plus":{"act":2,"n":9},"token":{"act":2,"n":10},"[term]":{"act":0,"n":11},"[nonterm]":{"act":0,"n":12}},{";":{"act":0,"n":13}},{";":{"act":1,"n":8,"l":1},"productionB-plus":{"act":2,"n":14},"productionB":{"act":2,"n":15},"|":{"act":0,"n":16}},{"|":{"act":1,"n":11,"l":1},";":{"act":1,"n":11,"l":1},"token":{"act":2,"n":17},"[term]":{"act":0,"n":11},"[nonterm]":{"act":0,"n":12}},{"|":{"act":1,"n":10,"l":1,"virt":true},";":{"act":1,"n":10,"l":1,"virt":true},"[term]":{"act":1,"n":10,"l":1,"virt":true},"[nonterm]":{"act":1,"n":10,"l":1,"virt":true}},{"[term]":{"act":1,"n":13,"l":1},"[nonterm]":{"act":1,"n":13,"l":1},"|":{"act":1,"n":13,"l":1},";":{"act":1,"n":13,"l":1}},{"[term]":{"act":1,"n":14,"l":1},"[nonterm]":{"act":1,"n":14,"l":1},"|":{"act":1,"n":14,"l":1},";":{"act":1,"n":14,"l":1}},{"[nonterm]":{"act":1,"n":4,"l":4},"$":{"act":1,"n":4,"l":4}},{";":{"act":1,"n":7,"l":2},"productionB":{"act":2,"n":18},"|":{"act":0,"n":16}},{";":{"act":1,"n":6,"l":1,"virt":true},"|":{"act":1,"n":6,"l":1,"virt":true}},{"token-plus":{"act":2,"n":19},"token":{"act":2,"n":10},"[term]":{"act":0,"n":11},"[nonterm]":{"act":0,"n":12}},{"|":{"act":1,"n":9,"l":2,"virt":true},";":{"act":1,"n":9,"l":2,"virt":true},"[term]":{"act":1,"n":9,"l":2,"virt":true},"[nonterm]":{"act":1,"n":9,"l":2,"virt":true}},{";":{"act":1,"n":5,"l":2,"virt":true},"|":{"act":1,"n":5,"l":2,"virt":true}},{"|":{"act":1,"n":12,"l":2},";":{"act":1,"n":12,"l":2},"token":{"act":2,"n":17},"[term]":{"act":0,"n":11},"[nonterm]":{"act":0,"n":12}}],"tags":{"globals":"function mkprod(f, left, right, k = 0) {let out = { tokens: [] }, hasCode = right.length > 0 && right[right.length - 1].label == 'code';for (let i = f, l = right.length - 1 - (hasCode ? 1 : 0) + k; i < l; i++) { out.tokens.push(right[i].value); }if (hasCode) { out.func = `(left, right) => { ${right[right.length - 1].value} }`; }return out;}","K":"1","type":"LALR","axiom":"root"},"regexes":[],"K":1,"gen":1}